# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven (build & test & deploy)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TEST_TAG: barlinbento/pascal-to-jvm-compiler:test

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

      - name: Build with Maven (Test Included)
        run: mvn -B package --file pom.xml

      - name: Show Workspace Tree Before test
        run: tree

      - name: test JAR (Example source file)
        run: |
          java -jar ./target/pascal_jvm_compiler-jar-with-dependencies.jar check testArguments.pas

  #single job called build
  dockerhub-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}

      - name: Test Docker Run (Example source file)
        run: |
          docker run --rm -v $(pwd)/:/usr/local/project/resources \
           ${{ env.TEST_TAG }} parse \
           src/test/resources/driver/testPascalCompilerDriver/testCheckArguments/testArguments.pas
#          docker run --rm ${{ env.TEST_TAG }}

      - name: Build dockerfile (Multi-platform with push,Cached)
        run: |
          docker buildx build \
          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag barlinbento/pascal-to-jvm-compiler:latest

