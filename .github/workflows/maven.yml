# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven (build & test & deploy)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        cache: maven
    - name: Build with Maven (Test Included)
      run: mvn -B package --file pom.xml

  #single job called build
  dockerhub-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: crazy-max/ghaction-docker-buildx@v1
        with:
          buildx-version: latest
      - name: Build dockerfile (with push)
        run: |
          docker buildx build \
          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
          --output "type=image,push=true" \
          --file ./Dockerfile . \
          --tag barlinbento/pascal-to-jvm-compiler:$(date +%s)"

#      - name: Build the Docker image
#        run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)
#      - uses: actions/checkout@master
#      - name: Publish to Registry
#        uses: elgohr/Publish-Docker-Github-Action@master
#        with:
#          name: barlinbento/pascal-to-jvm-compiler
#          username: ${{ secrets.DOCKER_USERNAME }}
#          password: ${{ secrets.DOCKER_PASSWORD }}
#          tag_names: true
#          cache: true

  update-workspace-tree:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Update Directory Tree Structure of the Project
        run: tree -I "out|target" > tree.txt
