# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven, Docker (build & test & deploy)

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  TEST_TAG: barlinbento/pascal-to-jvm-compiler:test

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: maven

#      - name: Test with Maven
#        run: mvn test
      - name: Driver Arguments Unit Test with Maven
        run: mvn -Dtest=PascalCompilerDriverArgsUnitTest test
      - name: Syntactic Unit Test with Maven
        run: mvn -Dtest=PascalCompilerDriverBuilderParseUnitTest test

      - name: Contextual Unit Test with Maven
        run: mvn -Dtest=PascalCompilerDriverBuilderCheckUnitTest test

      #TODO
#      - name: Code Generation Unit Test with Maven
#        run: mvn -Dtest=PascalCompilerDriverBuilderRunUnitTest test

#      - name: Show Workspace Tree Before test
#        run: tree

      - name: test JAR (Example source file)
        run: |
          java -jar ./target/pascal-to-jvm-compiler-jar-with-dependencies.jar check testArguments.pas

      - name: Build with Maven (Test skipped)
        run: mvn -B package --file pom.xml -DskipTests=true

      - name: Temporarily save jar artifact
        uses: actions/upload-artifact@v2
        with:
          name: jar-artifact
          path: ${{ github.workspace }}/target/*.jar
          retention-days: 1

  #single job called build
  dockerhub-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Test Docker Run (Example source file)
        run: |
          docker run --rm -v $(pwd)/:/res \
          ${{ env.TEST_TAG }} parse \
          src/test/resources/driver/testPascalCompilerDriver/testCheckArguments/testArguments.pas

          docker run --rm -v $(pwd)/:/res \
          ${{ env.TEST_TAG }} check \
          src/test/resources/driver/testPascalCompilerDriver/testCheck/testCheckWithSuccess/arithOperator.pas

      - name: Build dockerfile (Multi-platform with push,Cached)
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7
          push: true
          tags: barlinbento/pascal-to-jvm-compiler:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

#      - name: Build dockerfile (Multi-platform with push,Cached)
#        run: |
#          docker buildx build \
#          --platform=linux/amd64,linux/arm/v7,linux/arm64 \
#          --output "type=image,push=true" \
#          --file ./Dockerfile . \
#          --tag barlinbento/pascal-to-jvm-compiler:latest

      - # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

