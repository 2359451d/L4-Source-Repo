// Generated from D:/Workspace/L4-Source-Repo/src/main/java/grammar\Pascal.g4 by ANTLR 4.9.2
package ast.visitor;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PascalLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WRITE=1, WRITELN=2, READ=3, READLN=4, AND=5, ARRAY=6, BEGIN=7, BOOLEAN=8, 
		CASE=9, CHAR=10, CHR=11, CONST=12, DIV=13, DO=14, DOWNTO=15, ELSE=16, 
		END=17, FILE=18, FOR=19, FUNCTION=20, GOTO=21, IF=22, IN=23, INTEGER=24, 
		LABEL=25, MOD=26, NIL=27, NOT=28, OF=29, OR=30, PACKED=31, PROCEDURE=32, 
		PROGRAM=33, REAL=34, RECORD=35, REPEAT=36, SET=37, THEN=38, TO=39, TYPE=40, 
		UNTIL=41, VAR=42, WHILE=43, WITH=44, PLUS=45, MINUS=46, STAR=47, SLASH=48, 
		ASSIGN=49, COMMA=50, SEMI=51, COLON=52, EQUAL=53, NOT_EQUAL=54, LT=55, 
		LE=56, GE=57, GT=58, LPAREN=59, RPAREN=60, LBRACK=61, LBRACK2=62, RBRACK=63, 
		RBRACK2=64, POINTER=65, AT=66, DOT=67, DOTDOT=68, LCURLY=69, RCURLY=70, 
		UNIT=71, INTERFACE=72, USES=73, STRING=74, IMPLEMENTATION=75, TRUE=76, 
		FALSE=77, FORWARD=78, WS=79, COMMENT_1=80, COMMENT_2=81, IDENT=82, STRING_LITERAL=83, 
		NUM_INT=84, NUM_REAL=85;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", 
			"O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WRITE", 
			"WRITELN", "READ", "READLN", "AND", "ARRAY", "BEGIN", "BOOLEAN", "CASE", 
			"CHAR", "CHR", "CONST", "DIV", "DO", "DOWNTO", "ELSE", "END", "FILE", 
			"FOR", "FUNCTION", "GOTO", "IF", "IN", "INTEGER", "LABEL", "MOD", "NIL", 
			"NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", "REAL", "RECORD", 
			"REPEAT", "SET", "THEN", "TO", "TYPE", "UNTIL", "VAR", "WHILE", "WITH", 
			"PLUS", "MINUS", "STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", "COLON", 
			"EQUAL", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", "RPAREN", "LBRACK", 
			"LBRACK2", "RBRACK", "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", "LCURLY", 
			"RCURLY", "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", "TRUE", 
			"FALSE", "FORWARD", "WS", "COMMENT_1", "COMMENT_2", "IDENT", "STRING_LITERAL", 
			"NUM_INT", "NUM_REAL", "EXPONENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, null, "'+'", "'-'", "'*'", 
			"'/'", "':='", "','", "';'", "':'", "'='", "'<>'", "'<'", "'<='", "'>='", 
			"'>'", "'('", "')'", "'['", "'(.'", "']'", "'.)'", "'^'", "'@'", "'.'", 
			"'..'", "'{'", "'}'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "WRITE", "WRITELN", "READ", "READLN", "AND", "ARRAY", "BEGIN", 
			"BOOLEAN", "CASE", "CHAR", "CHR", "CONST", "DIV", "DO", "DOWNTO", "ELSE", 
			"END", "FILE", "FOR", "FUNCTION", "GOTO", "IF", "IN", "INTEGER", "LABEL", 
			"MOD", "NIL", "NOT", "OF", "OR", "PACKED", "PROCEDURE", "PROGRAM", "REAL", 
			"RECORD", "REPEAT", "SET", "THEN", "TO", "TYPE", "UNTIL", "VAR", "WHILE", 
			"WITH", "PLUS", "MINUS", "STAR", "SLASH", "ASSIGN", "COMMA", "SEMI", 
			"COLON", "EQUAL", "NOT_EQUAL", "LT", "LE", "GE", "GT", "LPAREN", "RPAREN", 
			"LBRACK", "LBRACK2", "RBRACK", "RBRACK2", "POINTER", "AT", "DOT", "DOTDOT", 
			"LCURLY", "RCURLY", "UNIT", "INTERFACE", "USES", "STRING", "IMPLEMENTATION", 
			"TRUE", "FALSE", "FORWARD", "WS", "COMMENT_1", "COMMENT_2", "IDENT", 
			"STRING_LITERAL", "NUM_INT", "NUM_REAL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PascalLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Pascal.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2W\u02cb\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\4_\t_\4"+
		"`\t`\4a\ta\4b\tb\4c\tc\4d\td\4e\te\4f\tf\4g\tg\4h\th\4i\ti\4j\tj\4k\t"+
		"k\4l\tl\4m\tm\4n\tn\4o\to\4p\tp\4q\tq\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5"+
		"\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16"+
		"\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3\23\3\23\3\24\3\24\3\25"+
		"\3\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34"+
		"\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36"+
		"\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3"+
		"!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3$\3"+
		"$\3$\3$\3$\3%\3%\3%\3%\3%\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3"+
		"(\3(\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3,\3,\3,\3,\3-\3-\3"+
		"-\3-\3-\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60"+
		"\3\61\3\61\3\61\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\63\3\63"+
		"\3\64\3\64\3\64\3\64\3\64\3\64\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66"+
		"\3\67\3\67\3\67\3\67\38\38\38\39\39\39\3:\3:\3:\3:\3:\3:\3:\3;\3;\3;\3"+
		";\3;\3;\3;\3;\3;\3;\3<\3<\3<\3<\3<\3<\3<\3<\3=\3=\3=\3=\3=\3>\3>\3>\3"+
		">\3>\3>\3>\3?\3?\3?\3?\3?\3?\3?\3@\3@\3@\3@\3A\3A\3A\3A\3A\3B\3B\3B\3"+
		"C\3C\3C\3C\3C\3D\3D\3D\3D\3D\3D\3E\3E\3E\3E\3F\3F\3F\3F\3F\3F\3G\3G\3"+
		"G\3G\3G\3H\3H\3I\3I\3J\3J\3K\3K\3L\3L\3L\3M\3M\3N\3N\3O\3O\3P\3P\3Q\3"+
		"Q\3Q\3R\3R\3S\3S\3S\3T\3T\3T\3U\3U\3V\3V\3W\3W\3X\3X\3Y\3Y\3Y\3Z\3Z\3"+
		"[\3[\3[\3\\\3\\\3]\3]\3^\3^\3_\3_\3_\3`\3`\3a\3a\3b\3b\3b\3b\3b\3c\3c"+
		"\3c\3c\3c\3c\3c\3c\3c\3c\3d\3d\3d\3d\3d\3e\3e\3e\3e\3e\3e\3e\3f\3f\3f"+
		"\3f\3f\3f\3f\3f\3f\3f\3f\3f\3f\3f\3f\3g\3g\3g\3g\3g\3h\3h\3h\3h\3h\3h"+
		"\3i\3i\3i\3i\3i\3i\3i\3i\3j\3j\3j\3j\3k\3k\3k\3k\7k\u0284\nk\fk\16k\u0287"+
		"\13k\3k\3k\3k\3k\3k\3l\3l\7l\u0290\nl\fl\16l\u0293\13l\3l\3l\3l\3l\3m"+
		"\3m\7m\u029b\nm\fm\16m\u029e\13m\3n\3n\3n\3n\7n\u02a4\nn\fn\16n\u02a7"+
		"\13n\3n\3n\3o\6o\u02ac\no\ro\16o\u02ad\3p\6p\u02b1\np\rp\16p\u02b2\3p"+
		"\3p\6p\u02b7\np\rp\16p\u02b8\3p\5p\u02bc\np\5p\u02be\np\3p\5p\u02c1\n"+
		"p\3q\3q\5q\u02c5\nq\3q\6q\u02c8\nq\rq\16q\u02c9\4\u0285\u0291\2r\3\2\5"+
		"\2\7\2\t\2\13\2\r\2\17\2\21\2\23\2\25\2\27\2\31\2\33\2\35\2\37\2!\2#\2"+
		"%\2\'\2)\2+\2-\2/\2\61\2\63\2\65\2\67\39\4;\5=\6?\7A\bC\tE\nG\13I\fK\r"+
		"M\16O\17Q\20S\21U\22W\23Y\24[\25]\26_\27a\30c\31e\32g\33i\34k\35m\36o"+
		"\37q s!u\"w#y${%}&\177\'\u0081(\u0083)\u0085*\u0087+\u0089,\u008b-\u008d"+
		".\u008f/\u0091\60\u0093\61\u0095\62\u0097\63\u0099\64\u009b\65\u009d\66"+
		"\u009f\67\u00a18\u00a39\u00a5:\u00a7;\u00a9<\u00ab=\u00ad>\u00af?\u00b1"+
		"@\u00b3A\u00b5B\u00b7C\u00b9D\u00bbE\u00bdF\u00bfG\u00c1H\u00c3I\u00c5"+
		"J\u00c7K\u00c9L\u00cbM\u00cdN\u00cfO\u00d1P\u00d3Q\u00d5R\u00d7S\u00d9"+
		"T\u00dbU\u00ddV\u00dfW\u00e1\2\3\2!\4\2CCcc\4\2DDdd\4\2EEee\4\2FFff\4"+
		"\2GGgg\4\2HHhh\4\2IIii\4\2JJjj\4\2KKkk\4\2LLll\4\2MMmm\4\2NNnn\4\2OOo"+
		"o\4\2PPpp\4\2QQqq\4\2RRrr\4\2SSss\4\2TTtt\4\2UUuu\4\2VVvv\4\2WWww\4\2"+
		"XXxx\4\2YYyy\4\2ZZzz\4\2[[{{\4\2\\\\||\5\2\13\f\17\17\"\"\4\2C\\c|\6\2"+
		"\62;C\\aac|\3\2))\4\2--//\2\u02bc\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2"+
		"=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3"+
		"\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2"+
		"\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2"+
		"c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3"+
		"\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2"+
		"\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085\3"+
		"\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2\2"+
		"\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9"+
		"\3\2\2\2\2\u00ab\3\2\2\2\2\u00ad\3\2\2\2\2\u00af\3\2\2\2\2\u00b1\3\2\2"+
		"\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2\2\2\u00b7\3\2\2\2\2\u00b9\3\2\2\2\2\u00bb"+
		"\3\2\2\2\2\u00bd\3\2\2\2\2\u00bf\3\2\2\2\2\u00c1\3\2\2\2\2\u00c3\3\2\2"+
		"\2\2\u00c5\3\2\2\2\2\u00c7\3\2\2\2\2\u00c9\3\2\2\2\2\u00cb\3\2\2\2\2\u00cd"+
		"\3\2\2\2\2\u00cf\3\2\2\2\2\u00d1\3\2\2\2\2\u00d3\3\2\2\2\2\u00d5\3\2\2"+
		"\2\2\u00d7\3\2\2\2\2\u00d9\3\2\2\2\2\u00db\3\2\2\2\2\u00dd\3\2\2\2\2\u00df"+
		"\3\2\2\2\3\u00e3\3\2\2\2\5\u00e5\3\2\2\2\7\u00e7\3\2\2\2\t\u00e9\3\2\2"+
		"\2\13\u00eb\3\2\2\2\r\u00ed\3\2\2\2\17\u00ef\3\2\2\2\21\u00f1\3\2\2\2"+
		"\23\u00f3\3\2\2\2\25\u00f5\3\2\2\2\27\u00f7\3\2\2\2\31\u00f9\3\2\2\2\33"+
		"\u00fb\3\2\2\2\35\u00fd\3\2\2\2\37\u00ff\3\2\2\2!\u0101\3\2\2\2#\u0103"+
		"\3\2\2\2%\u0105\3\2\2\2\'\u0107\3\2\2\2)\u0109\3\2\2\2+\u010b\3\2\2\2"+
		"-\u010d\3\2\2\2/\u010f\3\2\2\2\61\u0111\3\2\2\2\63\u0113\3\2\2\2\65\u0115"+
		"\3\2\2\2\67\u0117\3\2\2\29\u011d\3\2\2\2;\u0125\3\2\2\2=\u012a\3\2\2\2"+
		"?\u0131\3\2\2\2A\u0135\3\2\2\2C\u013b\3\2\2\2E\u0141\3\2\2\2G\u0149\3"+
		"\2\2\2I\u014e\3\2\2\2K\u0153\3\2\2\2M\u0157\3\2\2\2O\u015d\3\2\2\2Q\u0161"+
		"\3\2\2\2S\u0164\3\2\2\2U\u016b\3\2\2\2W\u0170\3\2\2\2Y\u0174\3\2\2\2["+
		"\u0179\3\2\2\2]\u017d\3\2\2\2_\u0186\3\2\2\2a\u018b\3\2\2\2c\u018e\3\2"+
		"\2\2e\u0191\3\2\2\2g\u0199\3\2\2\2i\u019f\3\2\2\2k\u01a3\3\2\2\2m\u01a7"+
		"\3\2\2\2o\u01ab\3\2\2\2q\u01ae\3\2\2\2s\u01b1\3\2\2\2u\u01b8\3\2\2\2w"+
		"\u01c2\3\2\2\2y\u01ca\3\2\2\2{\u01cf\3\2\2\2}\u01d6\3\2\2\2\177\u01dd"+
		"\3\2\2\2\u0081\u01e1\3\2\2\2\u0083\u01e6\3\2\2\2\u0085\u01e9\3\2\2\2\u0087"+
		"\u01ee\3\2\2\2\u0089\u01f4\3\2\2\2\u008b\u01f8\3\2\2\2\u008d\u01fe\3\2"+
		"\2\2\u008f\u0203\3\2\2\2\u0091\u0205\3\2\2\2\u0093\u0207\3\2\2\2\u0095"+
		"\u0209\3\2\2\2\u0097\u020b\3\2\2\2\u0099\u020e\3\2\2\2\u009b\u0210\3\2"+
		"\2\2\u009d\u0212\3\2\2\2\u009f\u0214\3\2\2\2\u00a1\u0216\3\2\2\2\u00a3"+
		"\u0219\3\2\2\2\u00a5\u021b\3\2\2\2\u00a7\u021e\3\2\2\2\u00a9\u0221\3\2"+
		"\2\2\u00ab\u0223\3\2\2\2\u00ad\u0225\3\2\2\2\u00af\u0227\3\2\2\2\u00b1"+
		"\u0229\3\2\2\2\u00b3\u022c\3\2\2\2\u00b5\u022e\3\2\2\2\u00b7\u0231\3\2"+
		"\2\2\u00b9\u0233\3\2\2\2\u00bb\u0235\3\2\2\2\u00bd\u0237\3\2\2\2\u00bf"+
		"\u023a\3\2\2\2\u00c1\u023c\3\2\2\2\u00c3\u023e\3\2\2\2\u00c5\u0243\3\2"+
		"\2\2\u00c7\u024d\3\2\2\2\u00c9\u0252\3\2\2\2\u00cb\u0259\3\2\2\2\u00cd"+
		"\u0268\3\2\2\2\u00cf\u026d\3\2\2\2\u00d1\u0273\3\2\2\2\u00d3\u027b\3\2"+
		"\2\2\u00d5\u027f\3\2\2\2\u00d7\u028d\3\2\2\2\u00d9\u0298\3\2\2\2\u00db"+
		"\u029f\3\2\2\2\u00dd\u02ab\3\2\2\2\u00df\u02b0\3\2\2\2\u00e1\u02c2\3\2"+
		"\2\2\u00e3\u00e4\t\2\2\2\u00e4\4\3\2\2\2\u00e5\u00e6\t\3\2\2\u00e6\6\3"+
		"\2\2\2\u00e7\u00e8\t\4\2\2\u00e8\b\3\2\2\2\u00e9\u00ea\t\5\2\2\u00ea\n"+
		"\3\2\2\2\u00eb\u00ec\t\6\2\2\u00ec\f\3\2\2\2\u00ed\u00ee\t\7\2\2\u00ee"+
		"\16\3\2\2\2\u00ef\u00f0\t\b\2\2\u00f0\20\3\2\2\2\u00f1\u00f2\t\t\2\2\u00f2"+
		"\22\3\2\2\2\u00f3\u00f4\t\n\2\2\u00f4\24\3\2\2\2\u00f5\u00f6\t\13\2\2"+
		"\u00f6\26\3\2\2\2\u00f7\u00f8\t\f\2\2\u00f8\30\3\2\2\2\u00f9\u00fa\t\r"+
		"\2\2\u00fa\32\3\2\2\2\u00fb\u00fc\t\16\2\2\u00fc\34\3\2\2\2\u00fd\u00fe"+
		"\t\17\2\2\u00fe\36\3\2\2\2\u00ff\u0100\t\20\2\2\u0100 \3\2\2\2\u0101\u0102"+
		"\t\21\2\2\u0102\"\3\2\2\2\u0103\u0104\t\22\2\2\u0104$\3\2\2\2\u0105\u0106"+
		"\t\23\2\2\u0106&\3\2\2\2\u0107\u0108\t\24\2\2\u0108(\3\2\2\2\u0109\u010a"+
		"\t\25\2\2\u010a*\3\2\2\2\u010b\u010c\t\26\2\2\u010c,\3\2\2\2\u010d\u010e"+
		"\t\27\2\2\u010e.\3\2\2\2\u010f\u0110\t\30\2\2\u0110\60\3\2\2\2\u0111\u0112"+
		"\t\31\2\2\u0112\62\3\2\2\2\u0113\u0114\t\32\2\2\u0114\64\3\2\2\2\u0115"+
		"\u0116\t\33\2\2\u0116\66\3\2\2\2\u0117\u0118\5/\30\2\u0118\u0119\5%\23"+
		"\2\u0119\u011a\5\23\n\2\u011a\u011b\5)\25\2\u011b\u011c\5\13\6\2\u011c"+
		"8\3\2\2\2\u011d\u011e\5/\30\2\u011e\u011f\5%\23\2\u011f\u0120\5\23\n\2"+
		"\u0120\u0121\5)\25\2\u0121\u0122\5\13\6\2\u0122\u0123\5\31\r\2\u0123\u0124"+
		"\5\35\17\2\u0124:\3\2\2\2\u0125\u0126\5%\23\2\u0126\u0127\5\13\6\2\u0127"+
		"\u0128\5\3\2\2\u0128\u0129\5\t\5\2\u0129<\3\2\2\2\u012a\u012b\5%\23\2"+
		"\u012b\u012c\5\13\6\2\u012c\u012d\5\3\2\2\u012d\u012e\5\t\5\2\u012e\u012f"+
		"\5\31\r\2\u012f\u0130\5\35\17\2\u0130>\3\2\2\2\u0131\u0132\5\3\2\2\u0132"+
		"\u0133\5\35\17\2\u0133\u0134\5\t\5\2\u0134@\3\2\2\2\u0135\u0136\5\3\2"+
		"\2\u0136\u0137\5%\23\2\u0137\u0138\5%\23\2\u0138\u0139\5\3\2\2\u0139\u013a"+
		"\5\63\32\2\u013aB\3\2\2\2\u013b\u013c\5\5\3\2\u013c\u013d\5\13\6\2\u013d"+
		"\u013e\5\17\b\2\u013e\u013f\5\23\n\2\u013f\u0140\5\35\17\2\u0140D\3\2"+
		"\2\2\u0141\u0142\5\5\3\2\u0142\u0143\5\37\20\2\u0143\u0144\5\37\20\2\u0144"+
		"\u0145\5\31\r\2\u0145\u0146\5\13\6\2\u0146\u0147\5\3\2\2\u0147\u0148\5"+
		"\35\17\2\u0148F\3\2\2\2\u0149\u014a\5\7\4\2\u014a\u014b\5\3\2\2\u014b"+
		"\u014c\5\'\24\2\u014c\u014d\5\13\6\2\u014dH\3\2\2\2\u014e\u014f\5\7\4"+
		"\2\u014f\u0150\5\21\t\2\u0150\u0151\5\3\2\2\u0151\u0152\5%\23\2\u0152"+
		"J\3\2\2\2\u0153\u0154\5\7\4\2\u0154\u0155\5\21\t\2\u0155\u0156\5%\23\2"+
		"\u0156L\3\2\2\2\u0157\u0158\5\7\4\2\u0158\u0159\5\37\20\2\u0159\u015a"+
		"\5\35\17\2\u015a\u015b\5\'\24\2\u015b\u015c\5)\25\2\u015cN\3\2\2\2\u015d"+
		"\u015e\5\t\5\2\u015e\u015f\5\23\n\2\u015f\u0160\5-\27\2\u0160P\3\2\2\2"+
		"\u0161\u0162\5\t\5\2\u0162\u0163\5\37\20\2\u0163R\3\2\2\2\u0164\u0165"+
		"\5\t\5\2\u0165\u0166\5\37\20\2\u0166\u0167\5/\30\2\u0167\u0168\5\35\17"+
		"\2\u0168\u0169\5)\25\2\u0169\u016a\5\37\20\2\u016aT\3\2\2\2\u016b\u016c"+
		"\5\13\6\2\u016c\u016d\5\31\r\2\u016d\u016e\5\'\24\2\u016e\u016f\5\13\6"+
		"\2\u016fV\3\2\2\2\u0170\u0171\5\13\6\2\u0171\u0172\5\35\17\2\u0172\u0173"+
		"\5\t\5\2\u0173X\3\2\2\2\u0174\u0175\5\r\7\2\u0175\u0176\5\23\n\2\u0176"+
		"\u0177\5\31\r\2\u0177\u0178\5\13\6\2\u0178Z\3\2\2\2\u0179\u017a\5\r\7"+
		"\2\u017a\u017b\5\37\20\2\u017b\u017c\5%\23\2\u017c\\\3\2\2\2\u017d\u017e"+
		"\5\r\7\2\u017e\u017f\5+\26\2\u017f\u0180\5\35\17\2\u0180\u0181\5\7\4\2"+
		"\u0181\u0182\5)\25\2\u0182\u0183\5\23\n\2\u0183\u0184\5\37\20\2\u0184"+
		"\u0185\5\35\17\2\u0185^\3\2\2\2\u0186\u0187\5\17\b\2\u0187\u0188\5\37"+
		"\20\2\u0188\u0189\5)\25\2\u0189\u018a\5\37\20\2\u018a`\3\2\2\2\u018b\u018c"+
		"\5\23\n\2\u018c\u018d\5\r\7\2\u018db\3\2\2\2\u018e\u018f\5\23\n\2\u018f"+
		"\u0190\5\35\17\2\u0190d\3\2\2\2\u0191\u0192\5\23\n\2\u0192\u0193\5\35"+
		"\17\2\u0193\u0194\5)\25\2\u0194\u0195\5\13\6\2\u0195\u0196\5\17\b\2\u0196"+
		"\u0197\5\13\6\2\u0197\u0198\5%\23\2\u0198f\3\2\2\2\u0199\u019a\5\31\r"+
		"\2\u019a\u019b\5\3\2\2\u019b\u019c\5\5\3\2\u019c\u019d\5\13\6\2\u019d"+
		"\u019e\5\31\r\2\u019eh\3\2\2\2\u019f\u01a0\5\33\16\2\u01a0\u01a1\5\37"+
		"\20\2\u01a1\u01a2\5\t\5\2\u01a2j\3\2\2\2\u01a3\u01a4\5\35\17\2\u01a4\u01a5"+
		"\5\23\n\2\u01a5\u01a6\5\31\r\2\u01a6l\3\2\2\2\u01a7\u01a8\5\35\17\2\u01a8"+
		"\u01a9\5\37\20\2\u01a9\u01aa\5)\25\2\u01aan\3\2\2\2\u01ab\u01ac\5\37\20"+
		"\2\u01ac\u01ad\5\r\7\2\u01adp\3\2\2\2\u01ae\u01af\5\37\20\2\u01af\u01b0"+
		"\5%\23\2\u01b0r\3\2\2\2\u01b1\u01b2\5!\21\2\u01b2\u01b3\5\3\2\2\u01b3"+
		"\u01b4\5\7\4\2\u01b4\u01b5\5\27\f\2\u01b5\u01b6\5\13\6\2\u01b6\u01b7\5"+
		"\t\5\2\u01b7t\3\2\2\2\u01b8\u01b9\5!\21\2\u01b9\u01ba\5%\23\2\u01ba\u01bb"+
		"\5\37\20\2\u01bb\u01bc\5\7\4\2\u01bc\u01bd\5\13\6\2\u01bd\u01be\5\t\5"+
		"\2\u01be\u01bf\5+\26\2\u01bf\u01c0\5%\23\2\u01c0\u01c1\5\13\6\2\u01c1"+
		"v\3\2\2\2\u01c2\u01c3\5!\21\2\u01c3\u01c4\5%\23\2\u01c4\u01c5\5\37\20"+
		"\2\u01c5\u01c6\5\17\b\2\u01c6\u01c7\5%\23\2\u01c7\u01c8\5\3\2\2\u01c8"+
		"\u01c9\5\33\16\2\u01c9x\3\2\2\2\u01ca\u01cb\5%\23\2\u01cb\u01cc\5\13\6"+
		"\2\u01cc\u01cd\5\3\2\2\u01cd\u01ce\5\31\r\2\u01cez\3\2\2\2\u01cf\u01d0"+
		"\5%\23\2\u01d0\u01d1\5\13\6\2\u01d1\u01d2\5\7\4\2\u01d2\u01d3\5\37\20"+
		"\2\u01d3\u01d4\5%\23\2\u01d4\u01d5\5\t\5\2\u01d5|\3\2\2\2\u01d6\u01d7"+
		"\5%\23\2\u01d7\u01d8\5\13\6\2\u01d8\u01d9\5!\21\2\u01d9\u01da\5\13\6\2"+
		"\u01da\u01db\5\3\2\2\u01db\u01dc\5)\25\2\u01dc~\3\2\2\2\u01dd\u01de\5"+
		"\'\24\2\u01de\u01df\5\13\6\2\u01df\u01e0\5)\25\2\u01e0\u0080\3\2\2\2\u01e1"+
		"\u01e2\5)\25\2\u01e2\u01e3\5\21\t\2\u01e3\u01e4\5\13\6\2\u01e4\u01e5\5"+
		"\35\17\2\u01e5\u0082\3\2\2\2\u01e6\u01e7\5)\25\2\u01e7\u01e8\5\37\20\2"+
		"\u01e8\u0084\3\2\2\2\u01e9\u01ea\5)\25\2\u01ea\u01eb\5\63\32\2\u01eb\u01ec"+
		"\5!\21\2\u01ec\u01ed\5\13\6\2\u01ed\u0086\3\2\2\2\u01ee\u01ef\5+\26\2"+
		"\u01ef\u01f0\5\35\17\2\u01f0\u01f1\5)\25\2\u01f1\u01f2\5\23\n\2\u01f2"+
		"\u01f3\5\31\r\2\u01f3\u0088\3\2\2\2\u01f4\u01f5\5-\27\2\u01f5\u01f6\5"+
		"\3\2\2\u01f6\u01f7\5%\23\2\u01f7\u008a\3\2\2\2\u01f8\u01f9\5/\30\2\u01f9"+
		"\u01fa\5\21\t\2\u01fa\u01fb\5\23\n\2\u01fb\u01fc\5\31\r\2\u01fc\u01fd"+
		"\5\13\6\2\u01fd\u008c\3\2\2\2\u01fe\u01ff\5/\30\2\u01ff\u0200\5\23\n\2"+
		"\u0200\u0201\5)\25\2\u0201\u0202\5\21\t\2\u0202\u008e\3\2\2\2\u0203\u0204"+
		"\7-\2\2\u0204\u0090\3\2\2\2\u0205\u0206\7/\2\2\u0206\u0092\3\2\2\2\u0207"+
		"\u0208\7,\2\2\u0208\u0094\3\2\2\2\u0209\u020a\7\61\2\2\u020a\u0096\3\2"+
		"\2\2\u020b\u020c\7<\2\2\u020c\u020d\7?\2\2\u020d\u0098\3\2\2\2\u020e\u020f"+
		"\7.\2\2\u020f\u009a\3\2\2\2\u0210\u0211\7=\2\2\u0211\u009c\3\2\2\2\u0212"+
		"\u0213\7<\2\2\u0213\u009e\3\2\2\2\u0214\u0215\7?\2\2\u0215\u00a0\3\2\2"+
		"\2\u0216\u0217\7>\2\2\u0217\u0218\7@\2\2\u0218\u00a2\3\2\2\2\u0219\u021a"+
		"\7>\2\2\u021a\u00a4\3\2\2\2\u021b\u021c\7>\2\2\u021c\u021d\7?\2\2\u021d"+
		"\u00a6\3\2\2\2\u021e\u021f\7@\2\2\u021f\u0220\7?\2\2\u0220\u00a8\3\2\2"+
		"\2\u0221\u0222\7@\2\2\u0222\u00aa\3\2\2\2\u0223\u0224\7*\2\2\u0224\u00ac"+
		"\3\2\2\2\u0225\u0226\7+\2\2\u0226\u00ae\3\2\2\2\u0227\u0228\7]\2\2\u0228"+
		"\u00b0\3\2\2\2\u0229\u022a\7*\2\2\u022a\u022b\7\60\2\2\u022b\u00b2\3\2"+
		"\2\2\u022c\u022d\7_\2\2\u022d\u00b4\3\2\2\2\u022e\u022f\7\60\2\2\u022f"+
		"\u0230\7+\2\2\u0230\u00b6\3\2\2\2\u0231\u0232\7`\2\2\u0232\u00b8\3\2\2"+
		"\2\u0233\u0234\7B\2\2\u0234\u00ba\3\2\2\2\u0235\u0236\7\60\2\2\u0236\u00bc"+
		"\3\2\2\2\u0237\u0238\7\60\2\2\u0238\u0239\7\60\2\2\u0239\u00be\3\2\2\2"+
		"\u023a\u023b\7}\2\2\u023b\u00c0\3\2\2\2\u023c\u023d\7\177\2\2\u023d\u00c2"+
		"\3\2\2\2\u023e\u023f\5+\26\2\u023f\u0240\5\35\17\2\u0240\u0241\5\23\n"+
		"\2\u0241\u0242\5)\25\2\u0242\u00c4\3\2\2\2\u0243\u0244\5\23\n\2\u0244"+
		"\u0245\5\35\17\2\u0245\u0246\5)\25\2\u0246\u0247\5\13\6\2\u0247\u0248"+
		"\5%\23\2\u0248\u0249\5\r\7\2\u0249\u024a\5\3\2\2\u024a\u024b\5\7\4\2\u024b"+
		"\u024c\5\13\6\2\u024c\u00c6\3\2\2\2\u024d\u024e\5+\26\2\u024e\u024f\5"+
		"\'\24\2\u024f\u0250\5\13\6\2\u0250\u0251\5\'\24\2\u0251\u00c8\3\2\2\2"+
		"\u0252\u0253\5\'\24\2\u0253\u0254\5)\25\2\u0254\u0255\5%\23\2\u0255\u0256"+
		"\5\23\n\2\u0256\u0257\5\35\17\2\u0257\u0258\5\17\b\2\u0258\u00ca\3\2\2"+
		"\2\u0259\u025a\5\23\n\2\u025a\u025b\5\33\16\2\u025b\u025c\5!\21\2\u025c"+
		"\u025d\5\31\r\2\u025d\u025e\5\13\6\2\u025e\u025f\5\33\16\2\u025f\u0260"+
		"\5\13\6\2\u0260\u0261\5\35\17\2\u0261\u0262\5)\25\2\u0262\u0263\5\3\2"+
		"\2\u0263\u0264\5)\25\2\u0264\u0265\5\23\n\2\u0265\u0266\5\37\20\2\u0266"+
		"\u0267\5\35\17\2\u0267\u00cc\3\2\2\2\u0268\u0269\5)\25\2\u0269\u026a\5"+
		"%\23\2\u026a\u026b\5+\26\2\u026b\u026c\5\13\6\2\u026c\u00ce\3\2\2\2\u026d"+
		"\u026e\5\r\7\2\u026e\u026f\5\3\2\2\u026f\u0270\5\31\r\2\u0270\u0271\5"+
		"\'\24\2\u0271\u0272\5\13\6\2\u0272\u00d0\3\2\2\2\u0273\u0274\5\r\7\2\u0274"+
		"\u0275\5\37\20\2\u0275\u0276\5%\23\2\u0276\u0277\5/\30\2\u0277\u0278\5"+
		"\3\2\2\u0278\u0279\5%\23\2\u0279\u027a\5\t\5\2\u027a\u00d2\3\2\2\2\u027b"+
		"\u027c\t\34\2\2\u027c\u027d\3\2\2\2\u027d\u027e\bj\2\2\u027e\u00d4\3\2"+
		"\2\2\u027f\u0280\7*\2\2\u0280\u0281\7,\2\2\u0281\u0285\3\2\2\2\u0282\u0284"+
		"\13\2\2\2\u0283\u0282\3\2\2\2\u0284\u0287\3\2\2\2\u0285\u0286\3\2\2\2"+
		"\u0285\u0283\3\2\2\2\u0286\u0288\3\2\2\2\u0287\u0285\3\2\2\2\u0288\u0289"+
		"\7,\2\2\u0289\u028a\7+\2\2\u028a\u028b\3\2\2\2\u028b\u028c\bk\2\2\u028c"+
		"\u00d6\3\2\2\2\u028d\u0291\7}\2\2\u028e\u0290\13\2\2\2\u028f\u028e\3\2"+
		"\2\2\u0290\u0293\3\2\2\2\u0291\u0292\3\2\2\2\u0291\u028f\3\2\2\2\u0292"+
		"\u0294\3\2\2\2\u0293\u0291\3\2\2\2\u0294\u0295\7\177\2\2\u0295\u0296\3"+
		"\2\2\2\u0296\u0297\bl\2\2\u0297\u00d8\3\2\2\2\u0298\u029c\t\35\2\2\u0299"+
		"\u029b\t\36\2\2\u029a\u0299\3\2\2\2\u029b\u029e\3\2\2\2\u029c\u029a\3"+
		"\2\2\2\u029c\u029d\3\2\2\2\u029d\u00da\3\2\2\2\u029e\u029c\3\2\2\2\u029f"+
		"\u02a5\7)\2\2\u02a0\u02a1\7)\2\2\u02a1\u02a4\7)\2\2\u02a2\u02a4\n\37\2"+
		"\2\u02a3\u02a0\3\2\2\2\u02a3\u02a2\3\2\2\2\u02a4\u02a7\3\2\2\2\u02a5\u02a3"+
		"\3\2\2\2\u02a5\u02a6\3\2\2\2\u02a6\u02a8\3\2\2\2\u02a7\u02a5\3\2\2\2\u02a8"+
		"\u02a9\7)\2\2\u02a9\u00dc\3\2\2\2\u02aa\u02ac\4\62;\2\u02ab\u02aa\3\2"+
		"\2\2\u02ac\u02ad\3\2\2\2\u02ad\u02ab\3\2\2\2\u02ad\u02ae\3\2\2\2\u02ae"+
		"\u00de\3\2\2\2\u02af\u02b1\4\62;\2\u02b0\u02af\3\2\2\2\u02b1\u02b2\3\2"+
		"\2\2\u02b2\u02b0\3\2\2\2\u02b2\u02b3\3\2\2\2\u02b3\u02c0\3\2\2\2\u02b4"+
		"\u02b6\7\60\2\2\u02b5\u02b7\4\62;\2\u02b6\u02b5\3\2\2\2\u02b7\u02b8\3"+
		"\2\2\2\u02b8\u02b6\3\2\2\2\u02b8\u02b9\3\2\2\2\u02b9\u02bb\3\2\2\2\u02ba"+
		"\u02bc\5\u00e1q\2\u02bb\u02ba\3\2\2\2\u02bb\u02bc\3\2\2\2\u02bc\u02be"+
		"\3\2\2\2\u02bd\u02b4\3\2\2\2\u02bd\u02be\3\2\2\2\u02be\u02c1\3\2\2\2\u02bf"+
		"\u02c1\5\u00e1q\2\u02c0\u02bd\3\2\2\2\u02c0\u02bf\3\2\2\2\u02c1\u00e0"+
		"\3\2\2\2\u02c2\u02c4\7g\2\2\u02c3\u02c5\t \2\2\u02c4\u02c3\3\2\2\2\u02c4"+
		"\u02c5\3\2\2\2\u02c5\u02c7\3\2\2\2\u02c6\u02c8\4\62;\2\u02c7\u02c6\3\2"+
		"\2\2\u02c8\u02c9\3\2\2\2\u02c9\u02c7\3\2\2\2\u02c9\u02ca\3\2\2\2\u02ca"+
		"\u00e2\3\2\2\2\20\2\u0285\u0291\u029c\u02a3\u02a5\u02ad\u02b2\u02b8\u02bb"+
		"\u02bd\u02c0\u02c4\u02c9\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}